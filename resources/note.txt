Car setCarDir(SDL_Renderer* renderer, char cell, SDL_Rect rect){
    Car car = Car(renderer, rect.x, rect.y, rect.w, rect.h, 1);
    switch (cell)
    {
    case '>':
        car.SetSpeed(rand() % 1 + 1);
        car.SetDirection(Car::Direction::right);
        break;
    case '<':
        car.SetSpeed((-1)*(rand() % 1 + 1));
        car.SetDirection(Car::Direction::left);
        break;
    case '^':
        car.SetDirection(Car::Direction::up);
        car.SetSpeed(rand() % 1 + 1);
        break;
    case 'v':
        car.SetDirection(Car::Direction::down);
        car.SetSpeed((-1)*(rand() % 1 + 1));
        break;
    default:
        break;
    }
    return car;
}

void createCar(SDL_Renderer* renderer, char cell, SDL_Rect rect, std::vector<Car>& cars){
    Car car = setCarDir(renderer, cell, rect);
    cars.push_back(car);
}